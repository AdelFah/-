{"cells":[{"cell_type":"markdown","metadata":{"id":"8hJfL9b2l439"},"source":["ФИО"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wRnqvYOkl6EX"},"outputs":[],"source":["Фахретдинов Адель Маратович"]},{"cell_type":"markdown","metadata":{"id":"weOtPwPQmgpD"},"source":["# Дисклеймер"]},{"cell_type":"markdown","metadata":{"id":"LznB3uscmjDa"},"source":["В данной практике вам необходимо применить все ваши знания по темам:\n","\n","- Функции\n","- Словари\n","- Списки\n","- Множества\n","- Условные конструкции\n","- Запросы\n","\n","и все что было изучено на прошлых практических занятиях\n","\n","В каждом задании кратко описаны функции, которые необходимо реализовать, детали реализации вы должны продумать самостоятельно"]},{"cell_type":"markdown","metadata":{"id":"7nSJIqkTvC_C"},"source":["# Задание 0"]},{"cell_type":"markdown","metadata":{"id":"exACjTiVvGUe"},"source":["Создайте функцию по нахождению уникальных элементов из двух списков\n","\n","\n","\n","```\n","a = [1, 2, 3, 4]\n","b = [3, 4, 5, 6]\n","```\n","\n"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":480,"status":"ok","timestamp":1731491550269,"user":{"displayName":"Adel Show","userId":"11599108646545333078"},"user_tz":-300},"id":"VRUV8Yl34zHx","outputId":"9adae0e2-ab9a-4709-d807-55d1772f84a9"},"outputs":[{"name":"stdout","output_type":"stream","text":["[1, 2, 5, 6]\n"]}],"source":["a = [1, 2, 3 , 4]\n","b = [3, 4, 5, 6]\n","uniq1 = [x for x in a if x not in b]\n","uniq2 = [x for x in b if x not in a]\n","uniq = ynik1 + ynik2\n","print(uniq)"]},{"cell_type":"markdown","metadata":{"id":"SVWNlBALpCNo"},"source":["# Задание 1"]},{"cell_type":"markdown","metadata":{"id":"RcKA-VEqpC7f"},"source":["Симулятор виртуального питомца\n","\n","Цель: создать виртуальный симулятор домашних животных, в котором пользователи смогут заводить питомцев и ухаживать за ними.\n","\n","Требования:\n","\n","- Функция для усыновления питомца (имя, тип, возраст).\n","- Функция для того, чтобы покормить питомца, поиграть с ним или уложить его спать.\n","- Функция для отображения состояния питомца (голод, радость, энергия)."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"hE7mF-HXpJLO"},"outputs":[{"name":"stdout","output_type":"stream","text":["Симулятор домашних животных\n"]}],"source":["def adopt_pet(name, pet_type, age):\n","  return {\n","      \"name\": name,\n","      \"type\": pet_type,\n","      \"age\": age,\n","      \"hunger\": 100,\n","      \"happiness\": 20,\n","      \"energy\": 100\n","  }\n","def feed(pet):\n","  pet[\"hunger\"] = max(pet[\"hunger\"] - 10, 0)\n","  print(f\"{pet['name']} покормлен\")\n","\n","def play(prt):\n","  if pet[\"energy\"] \u003e= 10:\n","    pet[\"happines\"] = min(pet[\"happines\"] + 10, 100)\n","    pet[\"energy\"] -= 10\n","    print(f\"{pet['name']} поиграл\")\n","  else:\n","    print(f\"{pet['name']} устал\")\n","\n","def sleep(pet):\n","  pet[\"energy\"] = min(pet[\"energy\"] + 15, 100)\n","  print(f\"{pet('name')} поспал\")\n","\n","def status():\n","  print(f\"Имя: {pet['name']}, Тип: {pet['type']}, Возраст: {pet['age']}, \"\n","          f\"Голод: {pet['hunger']}, Радость: {pet['happiness']},\\\n","           Энергия: {pet['energy']}\")\n","\n","def main():\n","  print(\"Симулятор домашних животных\")\n","  name = input(\"Введите имя питомца:\")\n","  pet_type = input(\"Введите тип животного:\")\n","  age = int(input(\"Введите возраст питомца:\"))\n","\n","  my_pet = adopt_pet(name, pet_type, age)\n","  while True:\n","    status(my_pet)\n","    action = input(\"Выберите действие: кормить/играть/спать/выйти\")\n","\n","    if action == \"кормить\":\n","      feed(my_pet)\n","    elif action == \"играть\":\n","      play(my_pet)\n","    elif action == \"спать\":\n","      sleep(my_pet)\n","    elif action == \"выйти\":\n","      print(\"Спасибо за игру!\")\n","      break\n","    else:\n","      print(\"Неверная команда\")\n","\n","main()"]},{"cell_type":"markdown","metadata":{"id":"qZ7qFQnmssNd"},"source":["# Задание 2"]},{"cell_type":"markdown","metadata":{"id":"UaccTe7ltNvg"},"source":["Рыцарь и дракон\n","\n","Цель: создать небольшую игру, в которой вам необходимо играть за рыцаря и сразиться с драконом\n","\n","Требования:\n","\n","- Создание персонажа (имя, информация о доспехах, оружии, урон, здоровье)\n","- Управление персонажем и мини сюжет\n","- Создание дракона (Имя, информация о здоровье и уроне)\n","- Боевая система (нанесение и получение урона, урон должен быть случайным в заданном диапазоне)\n","- Реализовать бой между драконом и рыцарем"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LCcxp5Q0srjY"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"N8oFiEXol3e2"},"source":["# Задание 3\n"]},{"cell_type":"markdown","metadata":{"id":"9p4WQG_Vl7wB"},"source":["Цель - создать менеджера команды Pokémon, который позволит пользователям:\n","\n","- Добавлять покемонов в свою команду. (если такого покемона еще нет в команде)\n","- Удалять покемонов из их команды.\n","- Просматривать подробную информацию обо всех покемонах в команде.\n","- Находить покемона по имени.\n","- Устраивать тренировочный бой между двумя покемонами\n","\n","Для данной задачи используйте: https://pokeapi.co/\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"NnGYp1MTqi5k"},"outputs":[],"source":[]}],"metadata":{"colab":{"name":"","provenance":[{"file_id":"1zZbU5QXY3ZEtfsKWHQC-JGRhxn7rwGmd","timestamp":1731490572040}],"version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}